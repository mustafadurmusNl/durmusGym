name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch: # For manual triggering

jobs:
  # 1. Automatically deploy to staging
  deploy-to-staging:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Trigger Vercel Staging Deploy
        run: curl -X POST ${{ secrets.VERCEL_STAGING_DEPLOY_HOOK_URL }}

      - name: Trigger Render Staging Deploy
        run: curl -X POST ${{ secrets.RENDER_STAGING_DEPLOY_HOOK_URL }}

  # 2. Run tests on the staging environment
  test-on-staging:
    needs: deploy-to-staging # This job runs after the staging deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Dependencies
        run: npm install

      - name: Run Cypress Tests on Staging
        run: npm run test:report
        env:
          CYPRESS_BASE_URL: https://durmus-gym-staging.vercel.app # Staging URL
          CYPRESS_BACKEND_URL: https://durmusgym-1.onrender.com # Staging backend URL

      - name: Upload Cypress Report
        uses: actions/upload-artifact@v4
        with:
          name: cypress-report
          path: cypress/reports/html

  # 3. Deploy to production (manual only and if tests are successful)
  deploy-to-prod:
    needs: test-on-staging # This job runs if the tests are successful
    if: github.event_name == 'workflow_dispatch' && success()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Trigger Vercel Production Deploy
        run: curl -X POST ${{ secrets.VERCEL_PROD_DEPLOY_HOOK_URL }}

      - name: Trigger Render Production Deploy
        run: curl -X POST ${{ secrets.RENDER_PROD_DEPLOY_HOOK_URL }}
